//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using src.libs.src.ctxs.game.selection.components;

public partial class GameEntity {

    public SelectionUpComponent selectionUp { get { return (SelectionUpComponent)GetComponent(GameComponentsLookup.SelectionUp); } }
    public bool hasSelectionUp { get { return HasComponent(GameComponentsLookup.SelectionUp); } }

    public void AddSelectionUp(float newTimeSinceUp) {
        var index = GameComponentsLookup.SelectionUp;
        var component = CreateComponent<SelectionUpComponent>(index);
        component.timeSinceUp = newTimeSinceUp;
        AddComponent(index, component);
    }

    public void ReplaceSelectionUp(float newTimeSinceUp) {
        var index = GameComponentsLookup.SelectionUp;
        var component = CreateComponent<SelectionUpComponent>(index);
        component.timeSinceUp = newTimeSinceUp;
        ReplaceComponent(index, component);
    }

    public void RemoveSelectionUp() {
        RemoveComponent(GameComponentsLookup.SelectionUp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<src.libs.src.ctxs.general.delay.systems.GameEntity> _matcherSelectionUp;

    public static Entitas.IMatcher<src.libs.src.ctxs.general.delay.systems.GameEntity> SelectionUp {
        get {
            if (_matcherSelectionUp == null) {
                var matcher = (Entitas.Matcher<src.libs.src.ctxs.general.delay.systems.GameEntity>)Entitas.Matcher<src.libs.src.ctxs.general.delay.systems.GameEntity>.AllOf(GameComponentsLookup.SelectionUp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSelectionUp = matcher;
            }

            return _matcherSelectionUp;
        }
    }
}
