//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using src.libs.src.ctxs.inputaction.command.components;

public partial class InputActionEntity {

    static readonly CommandQueuedComponent commandQueuedComponent = new CommandQueuedComponent();

    public bool isCommandQueued {
        get { return HasComponent(InputActionComponentsLookup.CommandQueued); }
        set {
            if (value != isCommandQueued) {
                var index = InputActionComponentsLookup.CommandQueued;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : commandQueuedComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputActionMatcher {

    static Entitas.IMatcher<src.libs.src.ctxs.general.delay.systems.InputActionEntity> _matcherCommandQueued;

    public static Entitas.IMatcher<src.libs.src.ctxs.general.delay.systems.InputActionEntity> CommandQueued {
        get {
            if (_matcherCommandQueued == null) {
                var matcher = (Entitas.Matcher<src.libs.src.ctxs.general.delay.systems.InputActionEntity>)Entitas.Matcher<src.libs.src.ctxs.general.delay.systems.InputActionEntity>.AllOf(InputActionComponentsLookup.CommandQueued);
                matcher.componentNames = InputActionComponentsLookup.componentNames;
                _matcherCommandQueued = matcher;
            }

            return _matcherCommandQueued;
        }
    }
}
